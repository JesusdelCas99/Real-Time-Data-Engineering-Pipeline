version: '3'

services:  

  kafka:
    container_name: broker
    image: bitnami/kafka:3.7.0
    ports:
      - "9092:9092"
    env_file: ./.env/kafka.env
    volumes:
      - ./kafka:/bitnami
    networks:
      kafka-network:
        ipv4_address: 172.20.10.3
    healthcheck:
      test: ["CMD", "nc", "-w", "2", "localhost", "9092"]
      interval: 15s
      timeout: 5s
      retries: 3
  
  
  postgres:
    container_name: postgres
    image: postgres:14
    env_file: ./.env/postgres.env
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    networks:
      kafka-network:
        ipv4_address: 172.20.10.4
  
    
  airflow:
    container_name: airflow
    image: apache/airflow:2.6.0-python3.9
    depends_on: 
      - postgres
    ports:
      - "8081:8081"
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./requirements.txt:/opt/airflow/requirements.txt
    env_file: ./.env/airflow.env
    command:
      - bash
      - -c
      - |
        pip install -r ./requirements.txt;
        airflow db init;
        airflow users create --username user --firstname user --lastname user --role Admin --email admin@example.com --password admin;
        airflow db upgrade;
        airflow webserver -p 8081 > /dev/null 2>&1 &
        airflow scheduler 
    networks:
      kafka-network:
        ipv4_address: 172.20.10.5


  control-center:
    container_name: control-center
    image: 'confluentinc/cp-enterprise-control-center:5.3.6-3'
    env_file: ./.env/control-center.env
    ports:
      - '9021:9021'
    depends_on:
      - kafka
      - schema-registry
    networks:
      kafka-network:
        ipv4_address: 172.20.10.6
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9021/" ]
      interval: 30s
      timeout: 10s
      retries: 5
    

  schema-registry:
    image: bitnami/schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8083:8083"
    env_file: ./.env/schema-registry.env
    networks:
      kafka-network:
        ipv4_address: 172.20.10.7
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8083/" ]
      interval: 30s
      timeout: 10s
      retries: 5


networks:
  kafka-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.10.0/24